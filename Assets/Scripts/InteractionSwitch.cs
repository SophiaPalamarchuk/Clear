using UnityEngine;

public class InteractionSwitch : MonoBehaviour
{
    public Transform player;
    public float activationDistance = 3f;

    public GameObject textObject;        // –ù–∞–¥–ø–∏—Å "–ù–∞—Ç–∏—Å–Ω–∏ F"
    public GameObject playerController;  // –û–±'—î–∫—Ç –∑ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–æ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    public GameObject puzzleUI;          // UI –∞–±–æ –∫–∞–º–µ—Ä–∞ –ø'—è—Ç–Ω–∞—à–æ–∫
    public GameObject gameRoot;          // –í—Å—ñ –æ–±'—î–∫—Ç–∏ –≥—Ä–∏ –≤ –ø'—è—Ç–Ω–∞—à–∫–∏

    public Camera mainCamera;
    public Camera puzzleCamera;

    private bool isNear = false;
    private bool isPuzzleMode = false;

    void Start()
    {
        SetPuzzleMode(false);
        if (textObject != null)
            textObject.SetActive(false);
    }

    void Update()
    {
        isNear = Vector3.Distance(player.position, transform.position) <= activationDistance;

        // –ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≥—Ä–∞–≤–µ—Ü—å –ø–æ—Ä—è–¥ —ñ –Ω–µ –≤ —Ä–µ–∂–∏–º—ñ –ø'—è—Ç–Ω–∞—à–æ–∫
        if (textObject != null)
            textObject.SetActive(isNear && !isPuzzleMode);

        if (isNear && Input.GetKeyDown(KeyCode.F))
        {
            isPuzzleMode = !isPuzzleMode;
            SetPuzzleMode(isPuzzleMode);
        }
    }

    void SetPuzzleMode(bool active)
    {
        // üîÅ –ö–∞–º–µ—Ä–∏
        mainCamera.gameObject.SetActive(!active);
        puzzleCamera.gameObject.SetActive(active);

        // üéÆ –ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∏
        playerController.SetActive(!active);
        puzzleUI.SetActive(active);
        gameRoot.SetActive(active);

        // üñ±Ô∏è –ö—É—Ä—Å–æ—Ä
        Cursor.lockState = active ? CursorLockMode.None : CursorLockMode.Locked;
        Cursor.visible = active;

        Debug.Log(active ? "üß© –í—Ö—ñ–¥ —É –≥—Ä—É –ø'—è—Ç–Ω–∞—à–∫–∏" : "üéÆ –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞");
    }
}